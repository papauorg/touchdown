<?xml version="1.0"?>
<doc>
    <assembly>
        <name>/home/tuxford/Develop/NET/Touchdown/src/Touchdown.Core/bin/Debug/TouchdownCore</name>
    </assembly>
    <members>
        <member name="T:Touchdown.SensorAbstraction.IKinectSensorProvider">
            <summary>
                <para>
            		Basic operations that all Kinect providers must implement in order to use the
            		touchdown framework.
            	</para>
                <para>
            		Provides an abstraction for the frames of the depth sensor and the rgb sensor
            		of the Kinect. This way you will be able to use the Microsoft Kinect SDK as well
            		as the OpenKinect SDK
            	</para>
            </summary>
        </member>
        <member name="E:Touchdown.SensorAbstraction.IKinectSensorProvider.DepthFrameReady">
            <summary>
            Occurs when the depth frame is ready and can be used for further recognition.
            </summary>
        </member>
        <member name="E:Touchdown.SensorAbstraction.IKinectSensorProvider.RGBFrameReady">
            <summary>
            Occurs when the RGB frame is ready and can be used for further recognition.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.IKinectSensorProvider.Start">
            <summary>
            Start this instance. From this point on the <see cref="E:Touchdown.SensorAbstraction.IKinectSensorProvider.DepthFrameReady" /> and
            <see cref="E:Touchdown.SensorAbstraction.IKinectSensorProvider.RGBFrameReady" /> events will be fired.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.IKinectSensorProvider.Stop">
            <summary>
            Stop this instance. the <see cref="E:Touchdown.SensorAbstraction.IKinectSensorProvider.DepthFrameReady" /> and
            <see cref="E:Touchdown.SensorAbstraction.IKinectSensorProvider.RGBFrameReady" /> events will stop being fired.
            </summary>
        </member>
        <member name="T:Touchdown.SensorAbstraction.FrameReadyEventArgs`1">
            <summary>
            Frame ready event arguments. Contains information for when a frame is ready.
            Inherited from System.EventArgs to be able to use EventHandlers
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.FrameReadyEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.FrameReadyEventArgs" /> class.
            </summary>
            <param name="frame">
            Frame.
            </param>
        </member>
        <member name="F:Touchdown.SensorAbstraction.FrameReadyEventArgs`1._frame">
            <summary>
            Frame information.
            </summary>
        </member>
        <member name="P:Touchdown.SensorAbstraction.FrameReadyEventArgs`1.FrameData">
            <summary>
            Gets the frame data.
            </summary>
            <value>
            The frame data.
            </value>
        </member>
        <member name="T:Touchdown.SensorAbstraction.Frame">
            <summary>
            Represents a frame. Contains basic information about it.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.Frame.#ctor(System.DateTime,Touchdown.SensorAbstraction.SensorData)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.Frame" /> class.
            </summary>
            <param name="frameTime">
            Frame time.
            </param>
            <param name="data">
            Data.
            </param>
        </member>
        <member name="P:Touchdown.SensorAbstraction.Frame.FrameTime">
            <summary>
            Gets the frame time.
            </summary>
            <value>
            The frame time.
            </value>
        </member>
        <member name="P:Touchdown.SensorAbstraction.Frame.Data">
            <summary>
            Gets or sets the raw data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="M:Touchdown.SensorAbstraction.Frame.CreateBitmap">
            <summary>
            Creates a visual representation of the frame.
            </summary>
            <returns>
            The bitmap.
            </returns>
        </member>
        <member name="T:Touchdown.SensorAbstraction.DepthFrame">
            <summary>
            Represents a Depth frame. Contains depth data for recognizing by depth.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.DepthFrame.#ctor(System.DateTime,Touchdown.SensorAbstraction.SensorData,System.Int16[])">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.DepthFrame" /> class.
            calculates the distance automatically!
            </summary>
            <param name="frameTime">
            Frame time.
            </param>
            <param name="data">
            Data.
            </param>
            <param name="depthData">Relative depth data (value from 0 to 2048 that represents the depth)</param>
        </member>
        <member name="M:Touchdown.SensorAbstraction.DepthFrame.#ctor(System.DateTime,Touchdown.SensorAbstraction.SensorData,System.Int16[],System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.DepthFrame" /> class.
            </summary>
            <param name="frameTime">
            Frame time.
            </param>
            <param name="data">
            Data.
            </param>
            <param name="depthData">
            Depth data.
            </param>
            <param name="distanceinMM">
            Distancein M.
            </param>
        </member>
        <member name="P:Touchdown.SensorAbstraction.DepthFrame.DepthMap">
            <summary>
            Gets the depth map.
            </summary>
            <value>
            The depth map.
            </value>
        </member>
        <member name="P:Touchdown.SensorAbstraction.DepthFrame.DistanceInMM">
            <summary>
            Gets the distance in millimeters.
            </summary>
            <value>
            The distance in millimeters.
            </value>
        </member>
        <member name="M:Touchdown.SensorAbstraction.DepthFrame.CreateBitmap">
            <summary>
            Creates a visual representation of the frame.
            </summary>
            <returns>
            The bitmap.
            </returns>
        </member>
        <member name="M:Touchdown.SensorAbstraction.DepthFrame.CalculateDistance">
            <summary>
            Calculates the distance in MM depending on the depth information.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.DepthFrame.DistanceInMMFromDepth(System.Int16)">
            <summary>
            contains the formula to calculate the distance in mm by the given depth value between 0 and 2048
            see: http://openkinect.org/wiki/Imaging_Information
            </summary>
            <returns>
            The in MM from depth.
            </returns>
            <param name="depthValue">
            Depth value.
            </param>
        </member>
        <member name="M:Touchdown.SensorAbstraction.DepthFrame.op_Subtraction(Touchdown.SensorAbstraction.DepthFrame,Touchdown.SensorAbstraction.DepthFrame)">
            <param name="orig">
            Frame from the sensor.
            </param>
            <param name="toRemove">
            background model that should be removed..
            </param>
        </member>
        <member name="T:Touchdown.SensorAbstraction.RGBFrame">
            <summary>
            Represents a RGB frame. Used for recognition by colour.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.RGBFrame.#ctor(System.DateTime,Touchdown.SensorAbstraction.SensorData)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.RGBFrame" /> class.
            </summary>
            <param name="frameTime">
            Frame time.
            </param>
            <param name="data">
            Data.
            </param>
        </member>
        <member name="M:Touchdown.SensorAbstraction.RGBFrame.CreateBitmap">
            <summary>
            Creates a visual representation of the frame.
            </summary>
            <returns>
            The bitmap.
            </returns>
        </member>
        <member name="T:Touchdown.SensorAbstraction.SensorData">
            <summary>
            Provides Raw sensor data of the Kinect. Uses 1-dimensional bytearray due to easy compatibility with the
            openkinect framework
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.SensorData.#ctor(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.SensorData" /> class.
            </summary>
            <param name="width">
            Width.
            </param>
            <param name="height">
            Height.
            </param>
            <param name="data">
            Data.
            </param>
        </member>
        <member name="P:Touchdown.SensorAbstraction.SensorData.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Touchdown.SensorAbstraction.SensorData.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Touchdown.SensorAbstraction.SensorData.RawData">
            <summary>
            Gets the raw data.
            </summary>
            <value>
            The raw data.
            </value>
        </member>
        <member name="T:Touchdown.SensorAbstraction.SimpleTouchFrame">
            <summary>
            Represents a simple touch frame. Contains only a list of recognized touch points without
            any additional info about it.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.SimpleTouchFrame.#ctor(System.DateTime,Touchdown.SensorAbstraction.SensorData)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.SimpleTouchFrame" /> class.
            </summary>
            <param name="frameTime">
            Frame time.
            </param>
            <param name="data">
            Data.
            </param>
        </member>
        <member name="M:Touchdown.SensorAbstraction.SimpleTouchFrame.CreateBitmap">
            <summary>
            Creates a visual representation of the frame.
            </summary>
            <returns>
            The bitmap.
            </returns>
        </member>
        <member name="T:Touchdown.SensorAbstraction.RGBFrameReadyEventArgs">
            <summary>
            RGB frame ready event arguments.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.RGBFrameReadyEventArgs.#ctor(Touchdown.SensorAbstraction.RGBFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.RGBFrameReadyEventArgs" /> class.
            </summary>
            <param name="frame">
            Frame.
            </param>
            <exception cref="T:System.ArgumentNullException">if frame is null</exception>
        </member>
        <member name="T:Touchdown.SensorAbstraction.DepthFrameReadyEventArgs">
            <summary>
            Raised when an DepthFrame from the Kinect sensor is ready.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.DepthFrameReadyEventArgs.#ctor(Touchdown.SensorAbstraction.DepthFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.RGBFrameReadyEventArgs" /> class.
            </summary>
            <param name="frame">
            Frame.
            </param>
            <exception cref="T:System.ArgumentNullException">if frame is null</exception>
        </member>
        <member name="T:Touchdown.Core.ITouchObserver`1">
            <summary>
            Defines basic methods and events that are needed to get touchframes of a defined area
            </summary>
        </member>
        <member name="E:Touchdown.Core.ITouchObserver`1.TouchFrameReady">
            <summary>
            Occurs when touch frame ready.
            </summary>
        </member>
        <member name="T:Touchdown.Core.SimpleTouchAreaObserver">
            <summary>
            Simple touch area observer. Observes the given toucharea and creates touchframes of it.
            </summary>
        </member>
        <member name="M:Touchdown.Core.SimpleTouchAreaObserver.#ctor(Touchdown.SensorAbstraction.IKinectSensorProvider,Touchdown.SensorAbstraction.TouchSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.Core.SimpleTouchAreaObserver" /> class.
            </summary>
            <param name="sensor">
            Sensor.
            </param>
            <param name="settings">
            Settings.
            </param>
            <exception cref="T:System.ArgumentNullException">if <param name="sensor" />  or <param name="settings" /> is null</exception>
        </member>
        <member name="E:Touchdown.Core.SimpleTouchAreaObserver.TouchFrameReady">
            <summary>
            Occurs when touch frame is ready.
            </summary>
        </member>
        <member name="M:Touchdown.Core.SimpleTouchAreaObserver.ExtractTouchPoints(System.Int16[])">
            <summary>
            Extracts the touch points from the raw, blurry points extracted from the backgroundmodel and the frames.
            </summary>
            <returns>
            The touch points.
            </returns>
            <param name="rawPoints">
            Raw points.
            </param>
        </member>
        <member name="M:Touchdown.Core.SimpleTouchAreaObserver.ApplyThreshold(System.Int16[],System.UInt32,System.UInt32)">
            <summary>
            sets all items of the array to -1 that are smaller than <param cref="minDistance" />
            and greater than <param name="maxDistance" /></summary>
            <returns>
            The threshold.
            </returns>
            <param name="backgroundExtracted">
            Background extracted.
            </param>
            <param name="minDistance">
            Minimum distance.
            </param>
            <param name="maxDistance">
            Max distance.
            </param>
        </member>
        <member name="T:Touchdown.Core.TouchFrameReadyEventArgs">
            <summary>
            Touch frame ready event arguments.
            </summary>
        </member>
        <member name="M:Touchdown.Core.TouchFrameReadyEventArgs.#ctor(Touchdown.SensorAbstraction.SimpleTouchFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.Core.TouchFrameReadyEventArgs" /> class.
            </summary>
            <param name="frame">
            Frame.
            </param>
        </member>
        <member name="T:Touchdown.SensorAbstraction.TouchSettings">
            <summary>
            Contains general settings that are used throughout the application.
            </summary>
        </member>
        <member name="M:Touchdown.SensorAbstraction.TouchSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.SensorAbstraction.TouchSettings" /> class with default
            values.
            </summary>
        </member>
        <member name="P:Touchdown.SensorAbstraction.TouchSettings.FrameCountForAverageBackgroundModel">
            <summary>
            Gets or sets the frame count for calculating the average distances for the background model.
            This value is used by the <see cref="T:Touchdown.Core.SimpleTouchAreaObserver" />. Defines the number of depth
            frames that are used to calculate the average distance to the background (i.e. the table)
            </summary>
            <value>
            The frame count for average background model.
            </value>
        </member>
        <member name="P:Touchdown.SensorAbstraction.TouchSettings.MaxDistanceFromBackground">
            <summary>
            Gets or sets the max distance from background that is still recognized as "touch".
            </summary>
            <value>
            The max distance from background.
            </value>
        </member>
        <member name="P:Touchdown.SensorAbstraction.TouchSettings.MinDistanceFromBackround">
            <summary>
            Gets or sets the minimum distance that must a touchpoint have to be recognized.
            Used to ignore noise and should be a little less than a finger height.
            </summary>
            <value>
            The minimum distance from backround threshold.
            </value>
        </member>
        <member name="T:Touchdown.Core.DepthFrameList">
            <summary>
            Collection of depthframes
            </summary>
        </member>
        <member name="M:Touchdown.Core.DepthFrameList.InsertItem(System.Int32,Touchdown.SensorAbstraction.DepthFrame)">
            <Docs>
            To be added.
            </Docs>
            <summary>
            To be added.
            </summary>
            <since version=".NET 2.0">
            </since>
            <param name="index">
            Index.
            </param>
            <param name="item">
            Item.
            </param>
        </member>
        <member name="M:Touchdown.Core.DepthFrameList.CalculateAverage">
            <summary>
            Calculates the average distance of all items (DepthMap).
            </summary>
            <returns>
            The average distance.
            </returns>
        </member>
        <member name="T:Touchdown.Core.IPointDistanceProvider">
            <summary>
            Provides a method to calculate the distance between two touch points.
            </summary>
        </member>
        <member name="M:Touchdown.Core.IPointDistanceProvider.GetDistance(Touchdown.Core.TouchPoint,Touchdown.Core.TouchPoint)">
            <summary>
            Gets the distance between two touch points.
            </summary>
            <returns>
            The distance.
            </returns>
            <param name="first">
            First.
            </param>
            <param name="second">
            Second.
            </param>
        </member>
        <member name="T:Touchdown.Core.TouchPoint">
            <summary>
            Defines a recognized touch point as coordinates of the TouchArea.
            </summary>
        </member>
        <member name="M:Touchdown.Core.TouchPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Touchdown.Core.TouchPoint" /> class.
            </summary>
            <param name="xPosition">
            X position.
            </param>
            <param name="yPosition">
            Y position.
            </param>
        </member>
        <member name="P:Touchdown.Core.TouchPoint.X">
            <summary>
            Gets the x position.
            </summary>
            <value>
            The x position.
            </value>
        </member>
        <member name="P:Touchdown.Core.TouchPoint.Y">
            <summary>
            Gets the y position.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="T:Touchdown.Core.EucledianDistanceProvider">
            <summary>
            Provides logic to calculate the eucledian distance between two touch points. Is equal to the Pythagorean theorem.
            http://en.wikipedia.org/wiki/Euclidean_distance
            </summary>
        </member>
        <member name="M:Touchdown.Core.EucledianDistanceProvider.Touchdown#Core#IPointDistanceProvider#GetDistance(Touchdown.Core.TouchPoint,Touchdown.Core.TouchPoint)">
            <inheritdoc />
        </member>
    </members>
</doc>
